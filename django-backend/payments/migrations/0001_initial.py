# Generated by Django 5.2.4 on 2025-07-17 04:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gateway_type', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('square', 'Square'), ('bank_transfer', 'Bank Transfer'), ('crypto', 'Cryptocurrency')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('deprecated', 'Deprecated')], default='active', max_length=20)),
                ('api_endpoint', models.URLField()),
                ('api_key_encrypted', models.TextField()),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('transaction_fee_fixed', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0.01, max_digits=10)),
                ('maximum_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('supports_refunds', models.BooleanField(default=True)),
                ('supports_partial_refunds', models.BooleanField(default=True)),
                ('supports_recurring', models.BooleanField(default=False)),
                ('supports_escrow', models.BooleanField(default=False)),
                ('supported_countries', models.JSONField(default=list)),
                ('supported_currencies', models.JSONField(default=list)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_processing_time', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_gateways',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('percentage', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('paid', 'Paid'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('deliverables', models.JSONField(default=list)),
                ('completion_criteria', models.JSONField(default=list)),
                ('client_approved', models.BooleanField(default=False)),
                ('client_approval_date', models.DateTimeField(blank=True, null=True)),
                ('senior_developer_approved', models.BooleanField(default=False)),
                ('senior_developer_approval_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='projects.project')),
            ],
            options={
                'db_table': 'milestones',
                'ordering': ['project', 'percentage'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_type', models.CharField(choices=[('milestone', 'Milestone Payment'), ('bonus', 'Bonus Payment'), ('refund', 'Refund'), ('penalty', 'Penalty Deduction')], default='milestone', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('disputed', 'Disputed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True)),
                ('gateway_response', models.JSONField(default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('expected_date', models.DateTimeField(blank=True, null=True)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.milestone')),
                ('payment_gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentgateway')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentDispute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_type', models.CharField(choices=[('non_delivery', 'Non-delivery of Work'), ('quality_issue', 'Quality Issue'), ('scope_change', 'Scope Change'), ('payment_delay', 'Payment Delay'), ('unauthorized_charge', 'Unauthorized Charge'), ('duplicate_charge', 'Duplicate Charge'), ('other', 'Other')], max_length=30)),
                ('status', models.CharField(choices=[('opened', 'Opened'), ('under_review', 'Under Review'), ('evidence_requested', 'Evidence Requested'), ('mediation', 'In Mediation'), ('resolved_client', 'Resolved in Favor of Client'), ('resolved_developer', 'Resolved in Favor of Developer'), ('resolved_partial', 'Partially Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='opened', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('disputed_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('evidence_files', models.JSONField(default=list)),
                ('communication_logs', models.JSONField(default=list)),
                ('resolution_summary', models.TextField(blank=True, null=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('response_deadline', models.DateTimeField(blank=True, null=True)),
                ('escalation_date', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disputed_against', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_against', to=settings.AUTH_USER_MODEL)),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_disputes', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='payments.payment')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_disputes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method_type', models.CharField(choices=[('bank_account', 'Bank Account'), ('paypal', 'PayPal'), ('stripe_account', 'Stripe Account'), ('crypto_wallet', 'Cryptocurrency Wallet'), ('digital_wallet', 'Digital Wallet')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending_verification', 'Pending Verification'), ('verified', 'Verified'), ('suspended', 'Suspended')], default='pending_verification', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('account_details', models.JSONField(default=dict)),
                ('display_name', models.CharField(max_length=100)),
                ('verification_status', models.CharField(default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_documents', models.JSONField(default=list)),
                ('total_payments_received', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_used_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_methods',
                'ordering': ['-is_default', '-last_used_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_type', models.CharField(choices=[('payment_initiated', 'Payment Initiated'), ('payment_processing', 'Payment Processing'), ('payment_completed', 'Payment Completed'), ('payment_failed', 'Payment Failed'), ('refund_initiated', 'Refund Initiated'), ('refund_completed', 'Refund Completed'), ('dispute_opened', 'Dispute Opened'), ('dispute_resolved', 'Dispute Resolved'), ('webhook_received', 'Webhook Received'), ('error_occurred', 'Error Occurred')], max_length=30)),
                ('log_level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('gateway_response', models.JSONField(default=dict)),
                ('error_code', models.CharField(blank=True, max_length=100, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_logs', to='payments.payment')),
            ],
            options={
                'db_table': 'transaction_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment', 'log_type'], name='transaction_payment_3a272e_idx'), models.Index(fields=['log_level', 'created_at'], name='transaction_log_lev_6cd37b_idx')],
            },
        ),
    ]
