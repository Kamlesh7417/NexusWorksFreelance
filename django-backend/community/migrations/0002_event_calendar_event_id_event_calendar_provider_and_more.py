# Generated by Django 5.2.4 on 2025-07-18 04:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='calendar_event_id',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='calendar_provider',
            field=models.CharField(blank=True, choices=[('google', 'Google Calendar'), ('outlook', 'Outlook Calendar'), ('apple', 'Apple Calendar'), ('ical', 'iCal')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='enable_breakout_rooms',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='enable_chat',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='event',
            name='enable_recording',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='enable_screen_sharing',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='event',
            name='recording_status',
            field=models.CharField(choices=[('none', 'No Recording'), ('scheduled', 'Recording Scheduled'), ('recording', 'Currently Recording'), ('completed', 'Recording Completed'), ('processing', 'Processing Recording'), ('available', 'Recording Available'), ('failed', 'Recording Failed')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='recording_urls',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='event',
            name='video_meeting_data',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='event',
            name='video_provider',
            field=models.CharField(blank=True, choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('microsoft_teams', 'Microsoft Teams'), ('webex', 'WebEx'), ('custom', 'Custom')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='waiting_room_enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='SessionParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('joined', 'Joined'), ('left', 'Left'), ('removed', 'Removed'), ('no_show', 'No Show')], default='invited', max_length=20)),
                ('join_time', models.DateTimeField(blank=True, null=True)),
                ('leave_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('can_share_screen', models.BooleanField(default=True)),
                ('can_use_chat', models.BooleanField(default=True)),
                ('is_muted', models.BooleanField(default=False)),
                ('camera_enabled', models.BooleanField(default=True)),
                ('chat_messages_sent', models.IntegerField(default=0)),
                ('screen_share_duration', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'session_participants',
                'ordering': ['-join_time'],
            },
        ),
        migrations.CreateModel(
            name='VirtualMeetingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('starting', 'Starting'), ('in_progress', 'In Progress'), ('ended', 'Ended'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='scheduled', max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('provider_meeting_id', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_data', models.JSONField(default=dict)),
                ('recording_enabled', models.BooleanField(default=False)),
                ('screen_sharing_used', models.BooleanField(default=False)),
                ('chat_enabled', models.BooleanField(default=True)),
                ('breakout_rooms_used', models.BooleanField(default=False)),
                ('max_participants', models.IntegerField(default=0)),
                ('total_duration_minutes', models.IntegerField(default=0)),
                ('recordings', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('co_hosts', models.ManyToManyField(blank=True, related_name='co_hosted_sessions', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_sessions', to='community.event')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosted_sessions', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='attended_sessions', through='community.SessionParticipant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'virtual_meeting_sessions',
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.AddField(
            model_name='sessionparticipant',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant_details', to='community.virtualmeetingsession'),
        ),
        migrations.CreateModel(
            name='MeetingRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recording_type', models.CharField(choices=[('full_session', 'Full Session'), ('audio_only', 'Audio Only'), ('screen_share', 'Screen Share Only'), ('chat_transcript', 'Chat Transcript'), ('highlights', 'Highlights')], default='full_session', max_length=20)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('available', 'Available'), ('failed', 'Failed'), ('expired', 'Expired'), ('deleted', 'Deleted')], default='processing', max_length=20)),
                ('file_name', models.CharField(max_length=200)),
                ('file_size_mb', models.FloatField(default=0.0)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('download_url', models.URLField(blank=True, null=True)),
                ('streaming_url', models.URLField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('provider_recording_id', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_data', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('password_protected', models.BooleanField(default=False)),
                ('access_password', models.CharField(blank=True, max_length=100, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('auto_delete_after_days', models.IntegerField(default=90)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('key_moments', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recording_files', to='community.virtualmeetingsession')),
            ],
            options={
                'db_table': 'meeting_recordings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CalendarIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('google', 'Google Calendar'), ('outlook', 'Outlook Calendar'), ('apple', 'Apple Calendar'), ('ical', 'iCal')], max_length=20)),
                ('calendar_id', models.CharField(max_length=200)),
                ('provider_event_id', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed'), ('outdated', 'Outdated')], default='pending', max_length=20)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True, null=True)),
                ('provider_data', models.JSONField(default=dict)),
                ('auto_sync', models.BooleanField(default=True)),
                ('sync_reminders', models.BooleanField(default=True)),
                ('sync_attendees', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_integrations', to='community.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calendar_integrations',
                'ordering': ['-created_at'],
                'unique_together': {('event', 'user', 'provider')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='sessionparticipant',
            unique_together={('session', 'user')},
        ),
    ]
