# Generated by Django 5.2.4 on 2025-07-17 22:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0004_projectproposal_proposalmodification_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicPricing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('base_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('complexity_level', models.CharField(choices=[('simple', 'Simple'), ('moderate', 'Moderate'), ('complex', 'Complex'), ('expert', 'Expert')], max_length=20)),
                ('complexity_multiplier', models.FloatField(default=1.0)),
                ('skill_premium', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('rare_skills_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('demand_multiplier', models.FloatField(default=1.0)),
                ('urgency_multiplier', models.FloatField(default=1.0)),
                ('calculated_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculation_factors', models.JSONField(default=dict)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='projects.task')),
            ],
            options={
                'db_table': 'dynamic_pricing',
            },
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_team_members', models.IntegerField(default=0)),
                ('active_assignments', models.IntegerField(default=0)),
                ('pending_invitations', models.IntegerField(default=0)),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('allocated_budget', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remaining_budget', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('current_projected_end_date', models.DateTimeField()),
                ('overall_progress_percentage', models.IntegerField(default=0)),
                ('tasks_completed', models.IntegerField(default=0)),
                ('tasks_in_progress', models.IntegerField(default=0)),
                ('tasks_pending', models.IntegerField(default=0)),
                ('average_team_utilization', models.FloatField(default=0.0)),
                ('critical_path_tasks', models.JSONField(default=list)),
                ('budget_risk_level', models.CharField(default='low', max_length=20)),
                ('timeline_risk_level', models.CharField(default='low', max_length=20)),
                ('resource_risk_level', models.CharField(default='low', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocation', to='projects.project')),
            ],
            options={
                'db_table': 'resource_allocations',
            },
        ),
        migrations.CreateModel(
            name='TeamInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('match_score', models.FloatField()),
                ('offered_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_hours', models.IntegerField()),
                ('estimated_completion_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('decline_reason', models.TextField(blank=True, null=True)),
                ('counter_offer_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invitation_rank', models.IntegerField()),
                ('is_fallback', models.BooleanField(default=False)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_invitations', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_invitations', to='projects.task')),
            ],
            options={
                'db_table': 'team_invitations',
                'ordering': ['task', 'invitation_rank'],
                'unique_together': {('task', 'developer')},
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('agreed_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agreed_hours', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('expected_completion_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('hours_logged', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_completion_date', models.DateTimeField(blank=True, null=True)),
                ('last_activity_date', models.DateTimeField(auto_now=True)),
                ('allocated_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('spent_budget', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to=settings.AUTH_USER_MODEL)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='projects.task')),
                ('invitation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='projects.teaminvitation')),
            ],
            options={
                'db_table': 'task_assignments',
            },
        ),
    ]
