# Generated by Django 5.2.4 on 2025-07-17 20:23

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0003_remove_projectmilestone_project_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('course_type', models.CharField(choices=[('video', 'Video Course'), ('interactive', 'Interactive Course'), ('project', 'Project-Based'), ('mentorship', 'Mentorship'), ('workshop', 'Workshop')], max_length=20)),
                ('skills_taught', models.JSONField(default=list)),
                ('prerequisites', models.JSONField(default=list)),
                ('duration_hours', models.IntegerField()),
                ('content_url', models.URLField(blank=True, null=True)),
                ('materials', models.JSONField(default=list)),
                ('is_free', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('enrollment_count', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'courses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('current_skills', models.JSONField(default=list)),
                ('target_skills', models.JSONField(default=list)),
                ('recommended_courses', models.JSONField(default=list)),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('market_trends_analysis', models.JSONField(default=dict)),
                ('skill_gap_analysis', models.JSONField(default=dict)),
                ('estimated_completion_time', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'learning_paths',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningCredit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('credit_type', models.CharField(choices=[('course_completion', 'Course Completion'), ('skill_assessment', 'Skill Assessment'), ('mentoring', 'Mentoring Others'), ('shadowing', 'Shadowing Participation'), ('project_contribution', 'Project Contribution'), ('community_participation', 'Community Participation')], max_length=30)),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.CharField(max_length=200)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_credits', to=settings.AUTH_USER_MODEL)),
                ('learning_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.learningpath')),
            ],
            options={
                'db_table': 'learning_credits',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShadowingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('approved', 'Approved'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='requested', max_length=20)),
                ('learning_goals', models.JSONField(default=list)),
                ('skills_to_observe', models.JSONField(default=list)),
                ('nda_signed', models.BooleanField(default=False)),
                ('nda_signed_date', models.DateTimeField(blank=True, null=True)),
                ('client_approved', models.BooleanField(default=False)),
                ('client_approval_date', models.DateTimeField(blank=True, null=True)),
                ('learning_credits_awarded', models.IntegerField(default=0)),
                ('mentoring_credits_awarded', models.IntegerField(default=0)),
                ('student_feedback', models.TextField(blank=True, null=True)),
                ('mentor_feedback', models.TextField(blank=True, null=True)),
                ('student_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('mentor_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('session_notes', models.TextField(blank=True, null=True)),
                ('attendance_log', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentoring_sessions', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shadowing_sessions', to='projects.project')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shadowing_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'shadowing_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped')], default='enrolled', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('final_score', models.FloatField(blank=True, null=True)),
                ('assessment_results', models.JSONField(default=dict)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='learning.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_enrollments',
                'ordering': ['-started_at'],
                'unique_together': {('user', 'course')},
            },
        ),
    ]
